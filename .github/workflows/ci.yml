name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [backend, frontend]
    env:
      APP_DIR: apps/${{ matrix.app }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        if: matrix.app == 'frontend'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Setup Python
        if: matrix.app == 'backend'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        working-directory: ${{ env.APP_DIR }}
        run: |
          if [ "${{ matrix.app }}" = "backend" ]; then
            poetry install
          else
            pnpm install
          fi
      - name: Lint
        working-directory: ${{ env.APP_DIR }}
        run: |
          if [ "${{ matrix.app }}" = "backend" ]; then
            poetry run flake8 .
          else
            pnpm run lint --if-present
          fi
      - name: Typecheck
        working-directory: ${{ env.APP_DIR }}
        run: |
          if [ "${{ matrix.app }}" = "backend" ]; then
            poetry run mypy .
          else
            pnpm run typecheck --if-present
          fi
      - name: Test
        working-directory: ${{ env.APP_DIR }}
        run: |
          if [ "${{ matrix.app }}" = "backend" ]; then
            poetry run pytest
          else
            pnpm test --if-present
          fi
      - name: Build
        working-directory: ${{ env.APP_DIR }}
        run: |
          if [ "${{ matrix.app }}" = "backend" ]; then
            poetry build
          else
            pnpm run build --if-present
          fi
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.app }}-dist
          path: ${{ env.APP_DIR }}/dist
